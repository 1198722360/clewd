/*
* https://gitgud.io/ahsk/clewd
* https://github.com/h-a-s-k/clewd
*/"use strict";const{genericFixes:C}=require("./clewd-utils.js"),N={user:"Human",assistant:"Assistant",system:"",example_user:"H",example_assistant:"A"},J=[...new Set([...Object.values(N).join(""),..."\n",...":",..."\\n"])].filter((e=>" "!==e)).sort(),F=["[Start a new Chat]","[Example Chat]"],W=e=>null!=e.name&&["assistant","user"].includes(e.role)&&!(e.name in N),z=e=>F.every((s=>s.toLowerCase()!==e.content.toLowerCase()));module.exports={Replacements:N,DangerChars:J,hasCustomName:W,isSTDivider:z,messagesToPrompt:({messages:e,promptType:s,stripSystem:t,model:n,Config:r})=>{s??="r";t??=false;const i=/^\[Circumstances and context of the dialogue: ([\s\S]+?)\.?\]$/i,a=/^\[([\s\S]+?)'s personality: ([\s\S]+?)\]$/i,o=JSON.parse(JSON.stringify(e)),l=o.filter((e=>"system"===e.role&&!("name"in e))),c=o.filter((e=>["user","assistant"].includes(e.role))),m=o.filter((e=>"name"in e)),d=[...m,...c];d.forEach(((e,s)=>{const t=d[s+1];e.customname=W(e);if(t){const s=e.content.endsWith("\n")?"":"\n";if("name"in e&&"name"in t){if(e.name===t.name){e.content+=`${s}${t.content}`;t.discard=true}}else if(["user","assistant"].includes(t.role)){if(t.role===e.role){e.content+=`${s}${t.content}`;t.discard=true}}else{e.content+=`${s}${t.content}`;t.discard=true}}}));l.forEach((e=>{if(e.discard)return;if(t){e.discard=true;return}const s=e.content.match(i),n=e.content.match(a);if(2===s?.length){e.content=r.ScenarioFormat.replace(/{{scenario}}/gim,s[1]);e.scenario=true}if(3===n?.length){e.content=r.PersonalityFormat.replace(/{{char}}/gim,n[1]).replace(/{{personality}}/gim,n[2]);e.personality=true}" "===e.content&&(e.discard=true);e.content}));c.find((e=>!e.discard&&"assistant"===e.role));const u=c.findLast((e=>!e.discard&&"assistant"===e.role)),f=(c.find((e=>!e.discard&&"user"===e.role)),c.findLast((e=>!e.discard&&"user"===e.role))),p=(c.find((e=>!e.discard)),c.findLast((e=>!e.discard))),g=(o.find((e=>!e.discard)),o.findLast((e=>!e.discard)),l.find(((e,s)=>0===s))),S=l.findLast(((e,s)=>s===l.length-1));g&&!z(g)&&(g.main=true);S&&!z(S)&&(S.jailbreak=true);p===u&&r.Settings.StripAssistant&&(u.strip=true);p===f&&r.Settings.StripHuman&&(f.strip=true);r.Settings.AllSamples&&!r.Settings.NoSamples&&c.forEach((e=>{if(!e.discard&&![u,f].includes(e))if("user"===e.role){e.name="example_user";e.role="system"}else if("assistant"===e.role){e.name="example_assistant";e.role="system"}else if(!e.customname)throw Error("Invalid message "+JSON.stringify(e))}));r.Settings.NoSamples&&!r.Settings.AllSamples&&m.forEach((e=>{if(!e.discard){if("example_user"===e.name)e.role="user";else if("example_assistant"===e.name)e.role="assistant";else if(!e.customname)throw Error("Invalid message "+JSON.stringify(e));e.customname||delete e.name}}));let h=[];if(!["r","R"].includes(s)){l.forEach((e=>{e.discard||(e.discard="c-c"===s?!e.jailbreak:"c-r"!==s||!e.main&&!e.jailbreak)}));h=l.filter((e=>!e.discard)).map((e=>`"${e.content.substring(0,25).replace(/\n/g,"\\n").trim()}..."`));c.forEach((e=>{e.discard||(p===e?e===p&&p===f&&(f.strip=true):e.discard=true)}))}const y=o.map(((e,s)=>{if(e.discard||e.content.length<1)return"";let t,n="";s>0&&(n="spacing"in e?"":"name"in e&&"system"===e.role?"\n":"\n\n");if(e.strip)t="";else if(e.customname)t=e.name.replaceAll("_"," ")+": ";else{if(!(e.role in N))throw Error("Couldn't find valid prefix "+JSON.stringify(e));t="name"in e&&e.name in N?N[e.name]+": ":"system"!==e.role?N[e.role]+": ":""}l.includes(e)||(e.content=e.content.trim());return`${n}${t}${e.content}`}));return{prompt:""+C(y.join("")).trim(),systems:h}}};